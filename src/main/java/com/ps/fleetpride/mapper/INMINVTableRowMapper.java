package com.ps.fleetpride.mapper;

import com.ps.fleetpride.dto.INMINVDto;
import org.springframework.jdbc.core.RowMapper;

import java.sql.ResultSet;
import java.sql.SQLException;

public class INMINVTableRowMapper implements RowMapper<INMINVDto> {
        @Override
        public INMINVDto mapRow(ResultSet rs, int rowNum) throws SQLException {
            INMINVDto entity = new INMINVDto();
            entity.setId(rs.getLong("ID"));
            entity.setLocate(rs.getString("LOCATE"));
            entity.setPool(rs.getBigDecimal("POOL"));
            entity.setPartNo(rs.getString("PARTNO"));
            entity.setDspPart(rs.getString("DSPPART"));
            entity.setSortNo(rs.getString("SORTNO"));
            entity.setIType(rs.getString("ITYPE"));
            entity.setPartStatus(rs.getString("PARTSTATUS"));
            entity.setCompy(rs.getBigDecimal("COMPY"));
            entity.setVendCode(rs.getString("VENDCODE"));
            entity.setSubvc(rs.getString("SUBVC"));
            entity.setInvClass(rs.getString("INVCLASS"));
            entity.setLocClass(rs.getString("LOCCLASS"));
            entity.setCat(rs.getString("CAT"));
            entity.setTrackCat(rs.getString("TRACKCAT"));
            entity.setPriceCat(rs.getString("PRICECAT"));
            entity.setICode2(rs.getString("ICODE2"));
            entity.setICode3(rs.getString("ICODE3"));
            entity.setVelPrcCd(rs.getString("VELPRCCD"));
            entity.setICode5(rs.getString("ICODE5"));
            entity.setIDesc(rs.getString("IDESC"));
            entity.setIQtyOh(rs.getBigDecimal("IQTYOH"));
            entity.setIQtyOr(rs.getBigDecimal("IQTYOR"));
            entity.setIQtyBo(rs.getBigDecimal("IQTYBO"));
            entity.setITrIn(rs.getBigDecimal("ITRIN"));
            entity.setITrOut(rs.getBigDecimal("ITROUT"));
            entity.setCustAlloc(rs.getBigDecimal("CUSTALLOC"));
            entity.setISnd(rs.getBigDecimal("ISND"));
            entity.setIMin(rs.getBigDecimal("IMIN"));
            entity.setITrObo(rs.getBigDecimal("ITROBO"));
            entity.setIList(rs.getBigDecimal("ILIST"));
            entity.setICost(rs.getBigDecimal("ICOST"));
            entity.setILprc(rs.getBigDecimal("ILPRC"));
            entity.setAvgCost(rs.getBigDecimal("AVGCOST"));
            entity.setWhseUm(rs.getString("WHSEUM"));
            entity.setWhsePack(rs.getBigDecimal("WHSEPACK"));
            entity.setSaleSum(rs.getString("SALESUM"));
            entity.setSalesPack(rs.getBigDecimal("SALESPACK"));
            entity.setXferUm(rs.getString("XFERUM"));
            entity.setXferPack(rs.getBigDecimal("XFERPACK"));
            entity.setWeight(rs.getBigDecimal("WEIGHT"));
            entity.setPVendor(rs.getBigDecimal("PVENDOR"));
            entity.setVendRet(rs.getString("VENDRET"));
            entity.setCustRet(rs.getString("CUSTRET"));
            entity.setIdtLsl(rs.getDate("IDTLSL"));
            entity.setIdtLp(rs.getDate("IDTLP"));
            entity.setILtd(rs.getBigDecimal("ILTD"));
            entity.setCorePool(rs.getBigDecimal("COREPOOL"));
            entity.setCorePart(rs.getString("COREPART"));
            entity.setICnt(rs.getBigDecimal("ICNT"));
            entity.setICntDt(rs.getDate("ICNTDT"));
            entity.setIaIdt(rs.getDate("IAIDT"));
            entity.setIPrice1(rs.getBigDecimal("IPRICE1"));
            entity.setIPrice2(rs.getBigDecimal("IPRICE2"));
            entity.setIPrice3(rs.getBigDecimal("IPRICE3"));
            entity.setIPrice4(rs.getBigDecimal("IPRICE4"));
            entity.setIPrice5(rs.getBigDecimal("IPRICE5"));
            entity.setIPriceFoc(rs.getBigDecimal("IPRICEFOC"));
            entity.setMatrix(rs.getString("MATRIX"));
            entity.setPopInx(rs.getBigDecimal("POPINX"));
            entity.setUsePop(rs.getString("USEPOP"));
            entity.setUsePdb(rs.getString("USEPDB"));
            entity.setProdLn(rs.getBigDecimal("PRODLN"));
            entity.setLpPart(rs.getString("LPPART"));
            entity.setGlInfo(rs.getString("GLINFO"));
            entity.setFobRule(rs.getString("FOBRULE"));
            entity.setPrcGroup(rs.getString("PRCGROUP"));
            entity.setPurchNote(rs.getString("PURCHNOTE"));
            entity.setSalesNote(rs.getString("SALESNOTE"));
            entity.setInvNote(rs.getString("INVNOTE"));
            entity.setBinLoc(rs.getString("BINLOC"));
            entity.setZone(rs.getString("ZONE"));
            entity.setAisle(rs.getBigDecimal("AISLE"));
            entity.setSection(rs.getString("SECTION"));
            entity.setShelf(rs.getBigDecimal("SHELF"));
            entity.setBldQty(rs.getBigDecimal("BLDQTY"));
            entity.setPkgCode(rs.getString("PKGCODE"));
            entity.setUpcCode(rs.getString("UPCCODE"));
            entity.setVtProdCd(rs.getString("VTPRODCD"));
            entity.setQty1Mo(rs.getBigDecimal("QTY1MO"));
            entity.setQty3Mo(rs.getBigDecimal("QTY3MO"));
            entity.setQty6Mo(rs.getBigDecimal("QTY6MO"));
            entity.setQty12Mo(rs.getBigDecimal("QTY12MO"));
            entity.setMinFrzDate(rs.getDate("MINFRZDATE"));
            entity.setMinApprovl(rs.getString("MINAPPROVL"));
            entity.setIForecast(rs.getBigDecimal("IFORECAST"));
            entity.setSafetyFact(rs.getBigDecimal("SAFETYFACT"));
            entity.setIMooh(rs.getBigDecimal("IMOOH"));
            entity.setITurns(rs.getBigDecimal("ITURNS"));
            entity.setIGmroi(rs.getBigDecimal("IGMROI"));
            entity.setIEoq(rs.getBigDecimal("IEOQ"));
            entity.setTypeCode(rs.getString("TYPECODE"));
            entity.setDemandCode(rs.getString("DEMANDCODE"));
            entity.setCostCode(rs.getString("COSTCODE"));
            entity.setStockCode(rs.getString("STOCKCODE"));
            entity.setSourceCode(rs.getString("SOURCECODE"));
            entity.setStockLoc(rs.getString("STOCKLOC"));
            entity.setPurchMeth(rs.getString("PURCHMETH"));
            entity.setOrderPoint(rs.getBigDecimal("ORDERPOINT"));
            entity.setPurchFreq(rs.getBigDecimal("PURCHFREQ"));
            entity.setSerialFlag(rs.getString("SERIALFLAG"));
            entity.setPurchFact(rs.getBigDecimal("PURCHFACT"));
            entity.setSuppPart(rs.getString("SUPPPART"));
            entity.setBrkEvnCost(rs.getBigDecimal("BRKEVNCOST"));
            entity.setFrtFactor(rs.getBigDecimal("FRTFACTOR"));
            entity.setIdtlRcv(rs.getDate("IDTLRCV"));
            entity.setIdtlSo(rs.getDate("IDTLSO"));
            entity.setILastUpdt(rs.getDate("ILASTUPDT"));
            entity.setLeadTime(rs.getBigDecimal("LEADTIME"));
            entity.setPartStatDt(rs.getDate("PARTSTATDT"));
            entity.setSeasnLngth(rs.getBigDecimal("SEASNLNGTH"));
            entity.setSeasnMnth(rs.getBigDecimal("SEASNMNTH"));
            entity.setSellUnit(rs.getBigDecimal("SELLUNIT"));
            entity.setStdSlsum(rs.getString("STDSLSUM"));
            entity.setVList(rs.getBigDecimal("VLIST"));
            entity.setVmrs(rs.getString("VMRS"));
            entity.setVPack(rs.getBigDecimal("VPACK"));
            entity.setVUm(rs.getString("VUM"));
            entity.setVWeight(rs.getBigDecimal("VWEIGHT"));
            entity.setCostLock(rs.getString("COSTLOCK"));
            entity.setCstLckDt(rs.getDate("CSTLCKDT"));
            entity.setJobPrice(rs.getBigDecimal("JOBPRICE"));
            entity.setDspCost(rs.getBigDecimal("DSPCOST"));
            entity.setProDesc(rs.getString("PRODESC"));
            entity.setPrLvlUpdDt(rs.getDate("PRLVLUPDDT"));
            entity.setFocPrUpdDt(rs.getDate("FOCPRUPDDT"));
            entity.setJobQty(rs.getBigDecimal("JOBQTY"));
            entity.setSeasInx(rs.getBigDecimal("SEASINX"));
            entity.setSafeInx(rs.getBigDecimal("SAFEINX"));
            entity.setIQtyRet(rs.getBigDecimal("IQTYRET"));
            entity.setVndPrdGrp(rs.getString("VNDPRDGRP"));
            entity.setCProdLn(rs.getBigDecimal("CPRODLN"));
            entity.setILpCpDate(rs.getDate("ILPCPDATE"));
            entity.setIFrtAttr(rs.getString("IFRTATTR"));
            entity.setPktNote(rs.getString("PKTNOTE"));
            entity.setManCell(rs.getString("MANCELL"));
            entity.setShipPack(rs.getBigDecimal("SHIPPACK"));
            entity.setDcsAfStyStk(rs.getBigDecimal("DCSAFTYSTK"));
            entity.setDmd1Mo(rs.getBigDecimal("DMD1MO"));
            entity.setDmd3Mo(rs.getBigDecimal("DMD3MO"));
            entity.setDmd6Mo(rs.getBigDecimal("DMD6MO"));
            entity.setDmd12Mo(rs.getBigDecimal("DMD12MO"));
            entity.setIdtlDmd(rs.getDate("IDTLDMD"));
            entity.setInflDa2A(rs.getString("INFLDA2_A"));
            entity.setInflDb2A(rs.getString("INFLDB2_A"));
            entity.setInflDa10A(rs.getString("INFLDA10_A"));
            entity.setInflDb10A(rs.getString("INFLDB10_A"));
            entity.setInflDa6_0(rs.getBigDecimal("INFLDA6_0"));
            entity.setInflDb6_0(rs.getBigDecimal("INFLDB6_0"));
            entity.setInflDa13_2(rs.getBigDecimal("INFLDA13_2"));
            entity.setInflDb13_2(rs.getBigDecimal("INFLDB13_2"));
            entity.setSupersedeFl(rs.getString("SUPERSEDFL"));
            entity.setSupersente(rs.getString("SUPERSENTE"));
            entity.setIQtyHold(rs.getBigDecimal("IQTYHOLD"));
            entity.setIQtyWhShld(rs.getBigDecimal("IQTYWHSHLD"));
            entity.setIQtyWoHld(rs.getBigDecimal("IQTYWOHLD"));
            entity.setIQtyIbtpnd(rs.getBigDecimal("IQTYIBTPND"));
            entity.setIQtyRoHold(rs.getBigDecimal("IQTYROHOLD"));
            entity.setIQtCrtUsr(rs.getString("IQTCRTUSR"));
            entity.setIQtCrtTim(rs.getTimestamp("IQTCRTTIM"));
            entity.setChgCurrUser(rs.getString("CHG_CURRUSER"));
            entity.setChgTimestamp(rs.getTimestamp("CHG_TIMESTAMP"));

            return entity;
        }
    }
